pipeline {
    agent any
    tools {
        jdk "JDK17"
    }
    environment {
        DOCKER_IMAGE = 'ssuzyn/achacha-backend' // <- Docker 이미지 이름 변수
    }
    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning the repository...'
                git branch: 'be',
                    credentialsId: 'GITLAB_PAT',
                    url: 'https://lab.ssafy.com/s12-final/S12P31D205.git'
            }
        }

        stage('Build') {
            steps {
                dir('backend/achacha') {
                    sh 'chmod +x gradlew'
                    sh './gradlew clean build -x test'
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                dir('backend/achacha') {
                    script {
                        echo "DOCKER_IMAGE: ${env.DOCKER_IMAGE}"
                        echo "BUILD_NUMBER: ${env.BUILD_NUMBER}"

                        // Docker 이미지 빌드 및 태그
                        def dockerImage = docker.build("${env.DOCKER_IMAGE}:${env.BUILD_NUMBER}")

                        // Docker Hub에 Credentials ID를 사용하여 푸시
                        docker.withRegistry('', 'DOCKER_HUB') {
                            dockerImage.push()
                            dockerImage.push('latest')
                        }
                        env.IMAGE_TAG = "${env.DOCKER_IMAGE}:${env.BUILD_NUMBER}"
                    }
                }
            }
        }

        stage('Deploy to Server') {
            steps {
                sshPublisher(
                    publishers: [
                        sshPublisherDesc(
                            configName: 'ec2-server',
                            transfers: [
                                sshTransfer(
                                    sourceFiles: '',
                                    remoteDirectory: '',
                                    execCommand: '''
                                        docker pull ${env.DOCKER_IMAGE}:latest
                                        docker stop achacha-backend || true
                                        docker rm achacha-backend || true
                                        docker run -d --name achacha-backend -p 8080:8080 --restart unless-stopped ${env.DOCKER_IMAGE}:latest
                                        docker system prune -f
                                    ''',
                                    execTimeout: 120000,
                                    usePty: true,
                                    noDefaultExcludes: false,
                                    flatten: false
                                )
                            ],
                            usePromotionTimestamp: false,
                            useWorkspaceInPromotion: false,
                            verbose: true
                        )
                    ]
                )
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo '[BE] 빌드 성공! ✅'
        }
        failure {
            echo '[BE] 빌드 실패! ❌'
        }
    }
}