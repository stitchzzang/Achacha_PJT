plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.eurachacha'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	// Spring Boot 기본 로깅 제외
    configureEach {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

// Querydsl 설정 추가
def querydslDir = "$buildDir/generated/querydsl"

dependencies {
	// log4j2
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	// Log4j2 JSON 형식 지원
	implementation 'org.apache.logging.log4j:log4j-layout-template-json:2.24.3'

	// Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'


    // Spring Security
    // Querydsl 의존성 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // AWS SDK
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.416'
    implementation 'com.amazonaws:aws-java-sdk-cloudfront:1.12.416'

    // Spring Security
//    implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
//    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
//    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
//    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// 입력 파라미터 검증을 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring MVC
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 테스트에서도 Lombok을 사용하기 위한 설정
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Querydsl Q 클래스 생성 경로 지정
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// java source set에 querydsl Q 클래스 추가
sourceSets {
    main.java.srcDirs += [querydslDir]
}

// Querydsl Q 클래스 생성 디렉토리를 clean 작업 시 제거
clean {
    delete file(querydslDir)
}

tasks.named('test') {
	useJUnitPlatform()
}
