/** @type {import('tailwindcss').Config} */
const { config } = require('./src/components/ui/gluestack-ui-provider/config');

module.exports = {
  content: ['./App.{js,jsx,ts,tsx}', './src/**/*.{js,jsx,ts,tsx}'],
  theme: {
    extend: {
      keyframes: {
        fadeIn: {
          '0%': { opacity: '0' },
          '100%': { opacity: '1' },
        },
        rotate: {
          '0%, 100%': { transform: 'rotate(0deg)' },
          '25%': { transform: 'rotate(-15deg)' },
          '75%': { transform: 'rotate(15deg)' },
        },
      },
      animation: {
        fadeIn: 'fadeIn 300ms ease-in forwards',
        rotate: 'rotate 0.3s ease-in-out',
      },
      colors: {
        primary: {
          DEFAULT: config.colors.primary,
          50: '#EDF7FD',
          100: '#D5EBFA',
          200: config.colors.tertiary,
          300: '#7BC4F4',
          400: config.colors.primary,
          500: config.colors.secondary,
          600: '#1F7BB3',
          700: '#196A9A',
          800: '#125880',
          900: '#0A4766',
        },
        secondary: {
          DEFAULT: '#278CCC',
          light: '#56AEE9',
          dark: '#1F7BB3',
        },
        tertiary: {
          DEFAULT: '#A7DAF9',
        },
        background: {
          DEFAULT: config.colors.background,
          alt: config.colors.backgroundAlt,
          dark: config.colors.backgroundDark,
        },
        text: {
          DEFAULT: config.colors.text,
          secondary: config.colors.textSecondary,
          light: config.colors.textLight,
          inverted: config.colors.textInverted,
        },
        button: {
          text: config.colors.buttonText,
          primary: config.colors.buttonPrimary,
          secondary: config.colors.buttonSecondary,
          tertiary: config.colors.buttonTertiary,
          danger: config.colors.buttonDanger,
          success: config.colors.buttonSuccess,
        },
        status: {
          success: config.colors.success,
          warning: config.colors.warning,
          danger: config.colors.danger,
          info: config.colors.info,
        },
        border: {
          DEFAULT: config.colors.border,
          light: config.colors.borderLight,
          dark: config.colors.borderDark,
        },
        disabled: config.colors.disabled,
        'disabled-text': config.colors.disabledText,
        overlay: config.colors.overlay,
        shadow: config.colors.shadow,
        card: {
          orange: '#FF9500',
          green: '#0DBA39',
          purple: '#AF52DE',
          blue: '#007AFF',
          cyan: '#30B0C7',
          pink: '#FF2DC3',
          'orange-disabled-20': '#FF950033',
          'orange-disabled-40': '#FF950066',
          'green-disabled-20': '#0DBA3933',
          'green-disabled-40': '#0DBA3966',
          'purple-disabled-20': '#AF52DE33',
          'purple-disabled-40': '#AF52DE66',
          'blue-disabled-20': '#007AFF33',
          'blue-disabled-40': '#007AFF66',
          'cyan-disabled-20': '#30B0C733',
          'cyan-disabled-40': '#30B0C766',
          'pink-disabled-20': '#FF2DC333',
          'pink-disabled-40': '#FF2DC366',
        },
        social: {
          kakao: config.colors.socialKakao,
          'kakao-text': config.colors.socialKakaoText,
          google: config.colors.socialGoogle,
          'google-text': config.colors.socialGoogleText,
        },
      },
      fontWeight: {
        thin: config.typography.fontWeights.thin,
        light: config.typography.fontWeights.light,
        regular: config.typography.fontWeights.regular,
        medium: config.typography.fontWeights.medium,
        semibold: config.typography.fontWeights.semibold,
        bold: config.typography.fontWeights.bold,
        extrabold: config.typography.fontWeights.extrabold,
      },
      fontSize: {
        'custom-heading-xl': config.typography.fontSizes.custom + 'px',
        xs: config.typography.fontSizes.xs + 'px',
        sm: config.typography.fontSizes.sm + 'px',
        md: config.typography.fontSizes.md + 'px',
        lg: config.typography.fontSizes.lg + 'px',
        xl: config.typography.fontSizes.xl + 'px',
        '2xl': config.typography.fontSizes['2xl'] + 'px',
        '3xl': config.typography.fontSizes['3xl'] + 'px',
        '4xl': config.typography.fontSizes['4xl'] + 'px',
      },
      lineHeight: {
        xs: config.typography.lineHeights.xs + 'px',
        sm: config.typography.lineHeights.sm + 'px',
        md: config.typography.lineHeights.md + 'px',
        lg: config.typography.lineHeights.lg + 'px',
        xl: config.typography.lineHeights.xl + 'px',
        '2xl': config.typography.lineHeights['2xl'] + 'px',
        '3xl': config.typography.lineHeights['3xl'] + 'px',
        '4xl': config.typography.lineHeights['4xl'] + 'px',
      },
      spacing: {
        none: config.layout.spacing.none + 'px',
        xs: config.layout.spacing.xs + 'px',
        sm: config.layout.spacing.sm + 'px',
        md: config.layout.spacing.md + 'px',
        lg: config.layout.spacing.lg + 'px',
        xl: config.layout.spacing.xl + 'px',
        '2xl': config.layout.spacing['2xl'] + 'px',
      },
      borderRadius: {
        none: config.layout.borderRadius.none + 'px',
        xs: config.layout.borderRadius.xs + 'px',
        sm: config.layout.borderRadius.sm + 'px',
        md: config.layout.borderRadius.md + 'px',
        lg: config.layout.borderRadius.lg + 'px',
        xl: config.layout.borderRadius.xl + 'px',
        full: config.layout.borderRadius.full + 'px',
      },
      borderWidth: {
        none: config.layout.borderWidth.none,
        thin: config.layout.borderWidth.thin + 'px',
        medium: config.layout.borderWidth.medium + 'px',
        thick: config.layout.borderWidth.thick + 'px',
        'x-thick': config.layout.borderWidth.xThick + 'px',
      },
    },
  },
  plugins: [],
};
